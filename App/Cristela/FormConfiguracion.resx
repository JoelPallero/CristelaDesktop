<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOgDAADoAwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALuvqQC7r6kAu6+pALywqgS8sKoEvLCqBLuv
        qAC7r6kAu6+pAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8r6kAvK+pALyvqQC8r6kAvLCqALywqgC8sKoAvbGrAL+0
        rgDCuLIAwLWvAMG2sQDBtrAAvK+pALuvqQC8r6kAvK+pAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC5sKwAu6+pALqtpwC5racAvLCqBLywqgOpm5UAjn14AK2g
        mgu1qKJ0tqqkibWoonOuoJoKhnRuAKmclQC8sKoDvLCqBLmtpwC5racAu6+pAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALuvqQC6rqgAuq6oAb6zrQK2qqQA////AMa7
        tQbIvbcAxru1PNXMxv/a0cv81czG/8W6tTnHvLYAxbu1Bot5bwC2qaMAvrKsArquqAC6rqgAu6+pAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyb63AKeZkwAAAAAA////ALap
        o3ezpqBOppeRABMAAAfOxL6K7Obg/+3m4PXs5d//zcO9hxQAAAanmZMAs6agT7apo3b///8A////AKeY
        kgDCt7EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACompQA+vXvAevj
        3QC7r6mP1s3H/9DGwPi5raepwrex4tnQyv/q493+5+Da/+rj3f7Yz8n/wrex4bmtp6nQx8H41s3H/7uv
        qY3l3tgA9O7oAaeZkwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMi9
        twPAtK8AwLSuQNnRy//u6OL66+Te/d7W0P/o4Nr/7OXf/eni3Pzp4tz76eLc/Ozl3/zn4Nr/39bQ/+vl
        3/zu6OL62dDK/7+0rj6/tK4AyL23AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA6ODaA+jh2wDn4Noy7OXf/+jh2//p4tz+6+Xf/Oni3Pvo4dv+6eLc/+ni3P/p4tz/6OHb/unj
        3fvr5d/86eHb/unh2//r5d/+5d7YMefg2gDn39kCu6+pAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADFurUAzMK8B+nh2wDi29WY6OHb/+ni3Pzp4tz96eLc/+ni3PPp4tyw6eLckOni
        3K3p4tzw6eLc/+ni3P3p4tz76OHb/+Lb1Zbp4dsAzMK8CMK3sgG6rqgAu6+pAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAK+inAD///8C////ANPKxLfp4tz/6eLc+uni3P/p4ty/6eLcHOni
        3ADp4twC6eLcAOni3Bfp4ty36eLc/+ni3Prp4tz/08nDtv///wD///8CsKOdANvf2ADb39gAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqpyWB7Wpo3K6raex4dnT+evk3v7p4tz/6eLc1eni
        3Azp4twA6eLcBOni3ATp4twE6eLcAOni3Afp4tzM6eLc/+vk3v7h2dP5uq2nsLapo3irnZgJqJqUALCi
        nAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADJv7ku1s3H/ODY0v/p4tz+6eLc/Oni
        3P/p4txk6ePdAOni3Abp4twA6eLcAOni3ADp4twF6eLcAOni3Fjp4tz/6eLc/Oni3P7g2NL+1s3H/8rA
        ujTKwLoAzsO9AyuRyQArkMoAK5DKACuQywArkMsAK5DKAAAAAAAAAAAAAAAAAOjh3DHs5uD26+Xf+uni
        3P7p4tz+6eLc/+Pb1TXo4dsA6OHbAtXMxgDo4dsA1s3HAOfg2gLn39kA4trUK+jh2/7p4tz/6eLc/uvl
        3/jt5uD+6+TeNuzl3gD66d4CLKPeAS/G+wMuvvQCKofGACuLyQAsn9kAAAAAAAAAAAAAAAAA6OHbL+jh
        2/zp4tz/6eLc/urj3fzn4Nr/0cjCWd3VzwDQx8EFu66oALuvqQC6rqgAzsS+BNrRywDPxb9N5t/Z/+rj
        3f3p4tz+6eLc/unh2//i39s3///gALTK1gQrlM4CK5PNACyg2QArlM4CK4/JASyX0QQrk80BK5TOACuT
        zQDp4twM6eLckuni3M7p4tz86eLc/erj3f/SyMLGAAAAAgAAAAC8sKoFuq6oBLywqgT///8B////ANDG
        wLzq493/6eLc/eni3Pzp4tzN6OLcmt3f3BD//+QAEY3RACyX0SQsoNrCLJ7ZnidfmAMlVZ0AK47JAC2q
        4AIsmdQALJnUAOjh2wDq5N4B7ObgAOvk3sbp4tz/6+Te+uHa1P+9saulfGljCWJMRgCsn5kCNRoUAGdS
        TAa7r6mb4NjS/+vk3vrp4tz/6+TexP//7gAbi8sALIzFLiuQyldD//8ALafhfy/E/v8vwPr4K5DKQyQ7
        cgkrj8ljKoC6DyqEvgAqgrsB5d3XAerj3Qfr5N4A2NDKk+ni3P/p4dv77OXf/d7W0P/Ct7Hit6ulj7So
        om+3qqSMwbaw3tzUzv/s5d/96eHb++ni3P/Xz8qTusvVAFmaxR4urujiLrfx/y2m4eMuuvT+L8f/+S/G
        //sus+35Lajj4i658/8tp+GrMNf/ADHh/wG+sqwCraCaAK6gminVzMb36+Te/+ni3P7o4dv87OXf/Ojh
        2//a0sz/1szG/9rRy//n4Nr/7OXf++jh2/zp4tz+6+Te/9PLxvjImIQgD7v/IzDG/fsvyP/+L8f//y/H
        //8vxf//L8X//y/I//8vx//8L8j//y/E/M0fAEQCM/r/Ad3VzwPc1M4A2tLMQ+jh2//q49356eLc/Oni
        3P/o4dv+6ePd++zm4Pvt5uD77Obg++rj3fvo4dv+6eLc/+ni3Pzq49356OHb/9fTzkKk5PQAMbz1xi/F
        //8vxP78L8T+mC/F/z0vxf9JL8T+ui/F//8vxP7/LrXvfy+/+QAvv/kE8OrkAf///wAAAAAA6eLcqeni
        3P/p4tz86eLcyOni3PLp4tz/6OHb/ujh2//o4dv+6eLc/+ni3PHp4tzI6eLc/Ojh3P/y5t2gKZHNKSya
        1Kcvv/n1L8b//y/E/oQvxf8AL8X/AzDP/wAw0P8AL8T+uy/H//8utvDlK5PNhyuTzRG7rqgA6uPdAevk
        3gDp4twF6eLcmOni3Grp4twA6eLcHOni3KDp4tz/6eLc9uni3P/p4tyd6eLcG+ni3ADp4txs5OHdmgCu
        /AAsuPNrL8D6/y/G//wvxf/6L8L7ITDQ/wAvxf8FL8T+By/J/wAvxP1XL8X//y/F//wuvvj/LrXvNeni
        3ADp4twA6eLcAeni3ALp4twA7ODWAOni3ATp4twA6eLcQeni3P/p4tz76eLc/+ni3D7p4twA6eLcBOrg
        3AAkxf8EFsT/ADHH/mUvxv//L8X/+y/C/P8tpuA3LarmAC2t5gYuuvMHL8H7AC6z7XEvxP//L8X//S/H
        //ovx/4u6uHdAOni3ADp4twA6eLcAeni3APp4twD6eLcAeni3ADp4twQ6eLclOni3Krp4tyT6eLcD+ni
        3ADp4twB6eLcA8/e4AQApv8ALL38Ci/H/kIvxv/iL8b//y2s5sAkL2kNAAAAACqFwAApebMtLrXv5i/H
        //8vx/63L8X+KC6++gQAAAAA6OHcAOni3ADp4twA6eLcAOni3ADp4twA6eLcAOni3ADp4twA6eLcAOni
        3ADp4twA6eLcAOni3ADp4twA5ODcACeBuwBa//8ASf//AC6588gvx///L8L7/i2p5OMsmtScLJzWqS2w
        6vIvxv/7L8X//y2x64YvyP8AL8n/BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOni3ADp4twA6eLcAeni
        3ATp4twE6eLcBOni3AHp4twA6eLcAAAAAAAvxf8ALa/pAi2p4wAtq+UzL8D6/y/G//8vxv//L8f//y/A
        +/8vwvz/L8j//y/F//0vxv//Lrz22iZLhQQhAz0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6ePcAOnh
        3QDp4d0A6eLcAOni3ADp4twA6eHdAOnh3QDp4tsAAAAAAAAAAAAw1P8AJlP/ACuN/wAvx/+kL8X/5C/F
        /4svxf/kL8b/+i/G//wvxP7JL8X/kS/F//cvyf9kL8D/AC+//wIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvxf8AL8X/AC/F
        /wkvxf8UL8X/AC/F/00vxf//L8X/7C/F/xQvxf8AL8X/Fi/F/wIvxf8AL8X/AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL8X/AC/F
        /wAvxf8BL8X/Ai/F/wEvxf8BL8X/Di/F/2Avxf9LLsr/AC/F/wQvxf8AL8X/AjX//wArjcQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAuxv8AL8X/AC/F/wAvxf8BL8X/AS/F/wAvxf8BL8f/AC/F/wAvxf8BMcz/AC/F/wEvxf8AL8X/AC/F
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvxf8AL8X/AC/F/wEvxf8EL8X/Ay/E/wAvxf8AL8X/AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////0F///1JX//oQQv/00Fl/8yAkf/IAAn/0AAF/9AABf/IAAl/yBQ
        J/8AiAX/AVQEPwEkBBcBVASCAIQGESBQMgIgACACQAAAAEAAEAJgAAEgogJBIE0FQSChBEDA8SQQAv0F
        IAH/j5AC///SEv//oAP//9KS///6N/////8=
</value>
  </data>
</root>